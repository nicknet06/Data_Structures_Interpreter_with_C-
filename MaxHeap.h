/*
  Στο συγκεκριμένο αρχείο ορίζεται η κλάση MaxHeap, η οποία διαχειρίζεται έναν μέγιστο σωρό (heap).
  Στον μέγιστο σωρό, η μεγαλύτερη τιμή βρίσκεται πάντα στη ρίζα, εξασφαλίζοντας εύκολη πρόσβαση στο μέγιστο στοιχείο.
  Η τεχνική αυτή είναι ιδιαίτερα χρήσιμη σε αλγόριθμους που έχουν ανάγκη από γρήγορη ανάκτηση ή διαχείριση του μεγαλύτερου στοιχείου.
  Με την κλάση MaxHeap μπορούμε να εισάγουμε, να διαγράφουμε και να ανακτούμε το μέγιστο με αποδοτικό τρόπο.
*/

#ifndef MAXHEAP_H
#define MAXHEAP_H
#include <iostream>
#include <fstream>
#include <string>
#include "Vector.h"

using namespace std;

/*
  Η κλάση MaxHeap χρησιμοποιεί έναν δυναμικό πίνακα (Vector<int>) για την αποθήκευση των δεδομένων.
  Περιλαμβάνει μεθόδους όπως:
  1) BuildHeapFromFile, η οποία αναλαμβάνει τη δημιουργία του σωρού από ένα αρχείο.
  2) insert, που εισάγει ένα νέο στοιχείο διατηρώντας την ιδιότητα του μέγιστου σωρού.
  3) getMax, που επιστρέφει το μεγαλύτερο στοιχείο.
  4) deleteMax, για τη διαγραφή του μεγαλύτερου στοιχείου.
  5) getSize, που δίνει το συνολικό πλήθος των στοιχείων στον σωρό.
  Οι μέθοδοι heapifyUp και heapifyDown λειτουργούν σε O(log n) χρόνο και αποκαθιστούν την ιδιότητα του σωρού μετά από κάθε εισαγωγή ή διαγραφή.
*/

class MaxHeap {
private:
    Vector<int> array;  // Αποθήκευση των στοιχείων σε έναν δυναμικό πίνακα
    void heapifyUp(int index);      // Αναδιοργάνωση για διατήρηση ιδιότητας μέγιστου σωρού (μετακίνηση προς τα πάνω)
    void heapifyDown(int index);    // Αναδιοργάνωση για διατήρηση ιδιότητας μέγιστου σωρού (μετακίνηση προς τα κάτω)

public:
    MaxHeap();
    ~MaxHeap();
    void BuildHeapFromFile(const string& filename); // Δημιουργεί τον σωρό από ένα εξωτερικό αρχείο
    void insert(int key);   // Εισάγει ένα νέο στοιχείο και τοποθετεί το μεγαλύτερο στοιχείο ως ρίζα
    int getMax();           // Επιστρέφει το μεγαλύτερο στοιχείο του σωρού ή ρίχνει εξαίρεση αν είναι άδειος
    void deleteMax();       // Διαγράφει τη ρίζα (το μεγαλύτερο στοιχείο) και αναδιοργανώνει τον σωρό
    int getSize();          // Επιστρέφει τον αριθμό των στοιχείων που περιέχει ο σωρός
};

#endif